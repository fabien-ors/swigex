name: publish_demos

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  SWIG_ROOT : ${{github.workspace}}/swig_420b

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python Version
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Update system
      run: sudo apt-get update

    - name: Compile and install [customized] SWIG 4.2.0
      run: |
        mkdir swig_src
        cd swig_src
        git clone https://github.com/fabien-ors/swig.git
        cd swig
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX:PATH=${{env.SWIG_ROOT}} -DCMAKE_BUILD_TYPE:STRING=Release 
        cd build
        make
        make install

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy jupyter nbconvert

    - name: Setup personal R libraries directory
      # Beware : ~/ is Linux only. For a potential windows a solution must be found yet
      run: mkdir -p ~/r_libs & echo ".libPaths('~/r_libs')" > ~/.Rprofile
      
    - name: Install R dependencies
      # Beware : ~/ is Linux only. For a potential windows a solution must be found yet
      run: |
        sudo apt-get install -yq r-base
        Rscript -e "install.packages (c('knitr', 'rmarkdown'), lib='~/r_libs', repos='https://cloud.r-project.org/')"

    - name: Build demonstration HTMLs and save generated folder name in the environment
      # TODO : Don't know why I must launch all dependency targets before build_demos
      run: |
        cmake -B${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_PYTHON=ON -DBUILD_R=ON -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig
        cmake --build ${{env.BUILD_DIR}} --target python_install
        cmake --build ${{env.BUILD_DIR}} --target r_install
        cmake --build ${{env.BUILD_DIR}} --target prepare_build_demos_py
        cmake --build ${{env.BUILD_DIR}} --target prepare_build_demos_r
        cmake --build ${{env.BUILD_DIR}} --target build_demos
        PROJECT_VERSION=$(cmake --build ${{env.BUILD_DIR}} --target print_version | grep PROJECT_VERSION | cut -d "=" -f2 | xargs)
        echo "DEMO_FOLDER=${{env.BUILD_DIR}}/demo" >> "$GITHUB_ENV"
        echo "PROJECT_VERSION=${PROJECT_VERSION}" >> "$GITHUB_ENV"

    - name: Print version
      run: echo "PROJECT_VERSION=${{ env.PROJECT_VERSION }}"

    - uses: actions/upload-artifact@v3 
      with:
        # This will become the folder name in the server
        name: demos-${{ env.PROJECT_VERSION }}
        path: ${{ env.DEMO_FOLDER }}

  publish:
    needs: build
    # Only ubuntu can upload to CRAN easily (ssh)
    runs-on: ubuntu-latest
    
    steps:
    - uses: fabien-ors/folder-publish-action@v1
      with:
        host: ${{ secrets.CG_HOST }}
        username: ${{ secrets.CG_USR }}
        password: ${{ secrets.CG_PWD }}
        dest-path: "/var/www/html/swigex"
