name: nonreg-demos-courses_ubuntu-latest

on:
  # Permit calling trigger
  workflow_call:
  # Activate the workflow at each push on main branch
  push:
    branches: [ main ]
  # Activate the workflow at each pull request on main branch
  pull_request:
    branches: [ main ]
  # Activate the workflow every day at 23:30 UTC = for Paris 00:30 (summer) or 01:30 (winter)
  schedule:
    # * is a special character in YAML so you have to quote the string
    - cron:  '30 23 * * *'
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  CMAKE_BUILD_TYPE : Release
  BUILD_DIR : build
  PYTHON_VERSION : "3.11"
  NUMPY_VERSION : "1.23.5"
  R_VERSION : "4.3.2"
  SWIG_ROOT : ${{github.workspace}}/swig_420b

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Target language to be tested
        tl: ["r", "python"]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python Version
      uses: actions/setup-python@v5
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install Python dependencies
      if: matrix.tl == "python"
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{env.NUMPY_VERSION}}
        python -m pip install jupyter
        python -m pip install notebook==6.1.6
        python -m pip install matplotlib
        python -m pip install plotly
        python -m pip install gstlearn

    - name: Setup R Version
      if: matrix.tl == "r"
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{env.R_VERSION}}

    - name: Install roxygen2
      if: matrix.tl == "r"
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        packages: roxygen2
        install-pandoc: false

    - name: Install the customized SWIG from source
      if: matrix.tl == "r"
      uses: fabien-ors/install-swig-unix-action@v1
      with:
        swig-root: ${{env.SWIG_ROOT}}
        generator: "Unix Makefiles"

    - name: Configure build directory for python package
      if: matrix.tl == "python"
      run: |
        cmake \
          -B${{ env.BUILD_DIR }} \
          -DBUILD_PYTHON=ON \

    - name: Configure build directory for R package
      if: matrix.tl == "r"
      run: |
        cmake \
          -B${{ env.BUILD_DIR }} \
          -DBUILD_R=ON \
          -DSWIG_EXECUTABLE=${{env.SWIG_ROOT}}/bin/swig

    - name: Build the package
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3

    - name: Execute Python demos and courses
      if: matrix.tl == "python"
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3 --target check_ipynb

    - name: Execute R demos and courses
      if: matrix.tl == "r"
      run: |
        cmake --build ${{env.BUILD_DIR}} --parallel 3 --target check_rmd

    - name: Compress output logs
      if: success() || failure()
      run: |
        cd ${{env.BUILD_DIR}}/tests
        find . -type f \( -name "*.asciidoc" -o -name "*.out" \) -print0 | tar -czvf demos-courses-logs.tar.gz --null -T -

    - name: Publish output logs as artefact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: demos-courses-logs
        path: ${{env.BUILD_DIR}}/tests/demos-courses-logs.tar.gz
