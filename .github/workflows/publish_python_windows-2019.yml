name: publish_python_windows-2019

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  COMPILE_VERSION : '"Visual Studio 16 2019"' #Because cmake -G needs " "
  DOXYGEN_ROOT : Doxygen
  DOXYGEN_URL : https://www.doxygen.nl/files/doxygen-1.9.3.windows.x64.bin.zip
  
jobs:

  build:
    runs-on: windows-2019
    strategy:
      matrix:
        # Python version + Numpy version
        python:
          - ["3.8",  "1.20.3"]
          - ["3.9",  "1.20.3"]
          - ["3.10", "1.21.6"]
          - ["3.11", "1.23.5"]
        arch:
          - ["win_amd64", "x64", "x64"]
          - ["win32",     "x86", "Win32"]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python Version
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.python[0]}}
        architecture: ${{matrix.arch[1]}}

    - name: Install Python dependencies
      # Force specific old version for Numpy
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy==${{matrix.python[1]}} twine wheel

    - name : Download and install Doxygen
      run: |
        mkdir ${{env.DOXYGEN_ROOT}}
        cd ${{env.DOXYGEN_ROOT}}
        mkdir bin
        cd .. 
        curl --progress-bar --output ${{env.DOXYGEN_ROOT}}/download.zip ${{env.DOXYGEN_URL}}
        7z -o${{env.DOXYGEN_ROOT}}/bin x ${{env.DOXYGEN_ROOT}}/download.zip

    - name : Create Wheels
      run : |
        cmake -B${{env.BUILD_DIR}} -G ${{env.COMPILE_VERSION}} -A ${{matrix.arch[2]}} -DPython3_ROOT_DIR="${{env.pythonLocation}}" -DDoxygen_ROOT=${{env.DOXYGEN_ROOT}} -DBUILD_PYTHON=ON -DBUILD_DOXYGEN=ON
        cmake --build ${{env.BUILD_DIR}} --target python_doc --config ${{env.BUILD_TYPE}}
        cmake --build ${{env.BUILD_DIR}} --target python_build --config ${{env.BUILD_TYPE}}
        cd ${{env.BUILD_DIR}}\python\${{env.BUILD_TYPE}}
        # Note: wheel must be declared pure (see setup.py)
        python setup.py bdist_wheel --plat-name=${{matrix.arch[0]}}

    - name : Upload
      run : python -m twine upload ${{env.BUILD_DIR}}\python\${{env.BUILD_TYPE}}\dist\*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{secrets.TWINE_PYPI_PWD}}
        TWINE_REPOSITORY: pypi
